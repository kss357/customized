<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= gameTitle %> - Customized</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.cdnfonts.com/css/neuething-sans-test" rel="stylesheet">
    <style>
        :root {
            --color-primary: #5f32e6;
            --color-background: #1c1c1f;
            --color-card: rgba(40, 40, 48, 0.95);
            --color-border: #31313c;
            --color-text: #ffffff;
            --color-text-secondary: #7b7a8e;
            --color-blue: #0093ff;
            --color-red: #e84057;
            --content-width: 1080px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: var(--color-background);
            font-family: 'Roboto', sans-serif;
            color: var(--color-text);
            min-height: 100vh;
        }

        .nav-wrapper {
            width: 100%;
            height: 70px;
            border-bottom: 1px solid var(--color-border);
            display: flex;
            justify-content: center;
        }

        .nav {
            width: var(--content-width);
            height: 100%;
            display: flex;
            align-items: center;
        }

        .nav-title {
            font-family: 'Neuething Sans Test', sans-serif;
            font-size: 15px;
            font-weight: 700;
            font-style: normal;
            line-height: 22px;
            color: var(--color-text);
            text-align: center;
            font-feature-settings: 'liga' off, 'clig' off;
        }

        .customized {
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .content {
            width: var(--content-width);
            padding: 40px 0;
        }

        .game-selector {
            display: flex;
            gap: 20px;
            margin-bottom: 24px;
        }

        .game-option {
            font-size: 18px;
            font-weight: bold;
            color: var(--color-text-secondary);
            cursor: pointer;
            transition: all 0.2s;
            padding: 12px 24px;
            border-radius: 100px;
            text-decoration: none;
        }

        .game-option.active {
            background: var(--color-primary);
            color: var(--color-text);
        }

        .hero-image {
            position: relative;
            width: 100%;
            height: 236px;
            margin-bottom: 24px;
            border-radius: 20px;
            overflow: hidden;
        }

        .hero-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .controls {
            display: flex;
            flex-direction: column;
            gap: 24px;
            margin-bottom: 24px;
        }

        .list-info {
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 100%;
        }

        .count-info {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .label {
            color: var(--Color-Gray-0, #FFF);
            font-feature-settings: 'liga' off, 'clig' off;
            font-family: Roboto;
            font-size: 15px;
            font-style: normal;
            font-weight: 400;
            line-height: 22px;
        }

        .count {
            color: var(--Color-Purple-400, #A072FF);
            font-feature-settings: 'liga' off, 'clig' off;
            font-family: Roboto;
            font-size: 15px;
            font-style: normal;
            font-weight: 700;
            line-height: 22px;
        }

        .sort-info {
            display: flex;
            align-items: center;
            gap: 8px;
            cursor: pointer;
            user-select: none;
        }

        .sort-info .label {
            color: var(--Color-Gray-0, #FFF);
            font-feature-settings: 'liga' off, 'clig' off;
            font-family: Roboto;
            font-size: 15px;
            font-style: normal;
            font-weight: 400;
            line-height: 22px;
        }

        .sort-info svg {
            transition: transform 0.2s ease;
        }

        .sort-info.likes svg {
            transform: rotate(180deg);
        }

        .btn {
            background: var(--color-primary);
            padding: 12px 24px;
            border-radius: 8px;
            cursor: pointer;
            align-self: flex-end;
            text-decoration: none;
            display: inline-block;
        }

        .btn .text {
            color: var(--color-text);
            font-weight: bold;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, 200px);
            gap: 20px;
            justify-content: start;
        }

        .card {
            display: flex;
            width: 200px;
            height: 320px;
            flex-direction: column;
            align-items: flex-start;
            flex-shrink: 0;
            background: var(--color-card);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            overflow: hidden;
            cursor: pointer;
            transition: transform 0.2s;
            position: relative;
        }

        .card:hover {
            transform: translateY(-4px);
        }


        .card-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .card-content {
            padding: 12px;
            display: flex;
            flex-direction: column;
            gap: 12px;
            width: 100%;
            height: 120px;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 3;
            line-clamp: 3;
            overflow: hidden;
            text-overflow: ellipsis;
            background: var(--color-card);
        }

        .card-info {
            display: flex;
            flex-direction: column;
            gap: 4px;
            width: 100%;
            flex: 1;
        }

        .card-title {
            overflow: hidden;
            color: var(--color-text);
            font-feature-settings: 'liga' off, 'clig' off;
            text-overflow: ellipsis;
            font-family: Roboto;
            font-size: 16px;
            font-style: normal;
            font-weight: 700;
            line-height: 24px;
            display: -webkit-box;
            -webkit-box-orient: vertical;
        }

        .card-author {
            overflow: hidden;
            color: var(--color-blue);
            font-feature-settings: 'liga' off, 'clig' off;
            text-overflow: ellipsis;
            font-family: Roboto;
            font-size: 14px;
            font-style: normal;
            font-weight: 400;
            line-height: 20px;
        }

        .card-date {
            overflow: hidden;
            color: var(--color-text-secondary);
            font-feature-settings: 'liga' off, 'clig' off;
            text-overflow: ellipsis;
            font-family: Roboto;
            font-size: 12px;
            font-style: normal;
            font-weight: 400;
            line-height: 16px;
        }

        .card-stats {
            display: flex;
            gap: 16px;
            width: 100%;
            margin-top: auto;
            padding-top: 12px;
        }

        .stat {
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .stat img {
            width: 16px;
            height: 16px;
            opacity: 0.7;
        }

        .stat-value {
            color: var(--Color-Darkpurple-200, #B7B7C9);
            text-align: right;
            font-feature-settings: 'liga' off, 'clig' off;
            font-family: Roboto;
            font-size: 12px;
            font-style: normal;
            font-weight: 400;
            line-height: 16px;
        }

        .new-badge {
            position: absolute;
            top: 12px;
            left: 12px;
            background: var(--color-red);
            padding: 4px 8px;
            border-radius: 4px;
            color: var(--color-text);
            font-weight: bold;
            font-size: 14px;
        }

        .like-icon {
            transition: all 0.2s ease;
            opacity: 0.7;
        }

        .like-icon.active {
            opacity: 1;
            filter: invert(53%) sepia(98%) saturate(3332%) hue-rotate(326deg) brightness(101%) contrast(96%);
        }
    </style>
</head>
<body>
    <div class="nav-wrapper">
        <div class="nav">
            <div class="nav-title"><a href="/" style="text-decoration: none; color: inherit;">Customized</a></div>
        </div>
    </div>

    <div class="customized">
        <div class="content">
            <div class="game-selector">
                <a href="/monster-hunter-wilds" class="game-option <%= game === 'monster-hunter-wilds' ? 'active' : '' %>">
                    Monster hunter wilds
                </a>
                <a href="/lost-ark" class="game-option <%= game === 'lost-ark' ? 'active' : '' %>">
                    Lost Ark
                </a>
            </div>

            <div class="hero-image">
                <img src="<%= heroImage %>" alt="Main Image">
            </div>

            <div class="controls">
                <a href="/<%= game %>/write" class="btn">
                    <div class="text">등록</div>
                </a>
                <div class="list-info">
                    <div class="count-info">
                        <span class="label">전체</span>
                        <span class="count"><%= 글목록.length %>개</span>
                    </div>
                    <div class="sort-info">
                        <span class="label">최신순</span>
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <path d="M13.4697 7.53033C13.7626 7.82322 14.2374 7.82322 14.5303 7.53033L15.25 6.81066L15.25 17C15.25 17.4142 15.5858 17.75 16 17.75C16.4142 17.75 16.75 17.4142 16.75 17L16.75 6.81066L17.4697 7.53033C17.7626 7.82322 18.2374 7.82322 18.5303 7.53033C18.8232 7.23744 18.8232 6.76256 18.5303 6.46967L16.5303 4.46967C16.2374 4.17678 15.7626 4.17678 15.4697 4.46967L13.4697 6.46967C13.1768 6.76256 13.1768 7.23744 13.4697 7.53033Z" fill="white"/>
                            <path d="M8.75 17.1893L9.46967 16.4697C9.76256 16.1768 10.2374 16.1768 10.5303 16.4697C10.8232 16.7626 10.8232 17.2374 10.5303 17.5303L8.53033 19.5303C8.23744 19.8232 7.76256 19.8232 7.46967 19.5303L5.46967 17.5303C5.17678 17.2374 5.17678 16.7626 5.46967 16.4697C5.76256 16.1768 6.23744 16.1768 6.53033 16.4697L7.25 17.1893L7.25 7C7.25 6.58579 7.58579 6.25 8 6.25C8.41421 6.25 8.75 6.58579 8.75 7L8.75 17.1893Z" fill="white"/>
                        </svg>
                    </div>
                </div>
            </div>

            <div class="grid">
                <% for(let i = 0; i < 글목록.length; i++) { %>
                    <div class="card">
                        <div class="card-inner" onclick="location.href='/<%= game %>/detail/<%= 글목록[i]._id %>'">
                            <div class="card-image">
                                <img src="<%= 글목록[i].imageUrls && 글목록[i].imageUrls.imageFace ? 글목록[i].imageUrls.imageFace : 'https://customized.b-cdn.net/default.png' %>" alt="게시물 이미지">
                            </div>
                            <% if (글목록[i].isNew) { %>
                                <div class="new-badge">N</div>
                            <% } %>
                            <div class="card-content">
                                <div class="card-info">
                                    <div class="card-title"><%= 글목록[i].title %></div>
                                    <div class="card-author"><%= 글목록[i].author %></div>
                                    <div class="card-date"><%= new Date(글목록[i].createdAt).toLocaleDateString() %></div>
                                </div>
                                <div class="card-stats">
                                    <div class="stat like-button" onclick="handleLike(event, '<%= 글목록[i]._id.toString() %>')">
                                        <img src="/images/heart-icon.svg" alt="좋아요" class="like-icon <%= 글목록[i].likedUsers?.includes(cookies.userId) ? 'active' : '' %>" />
                                        <span class="stat-value"><%= 글목록[i].likeCount || 0 %></span>
                                    </div>
                                    <div class="stat">
                                        <img src="/images/view-icon.svg" alt="조회수" />
                                        <span class="stat-value"><%= 글목록[i].views || 0 %></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <script>
        // 좋아요 버튼 클릭 핸들러
        async function handleLike(event, postId) {
            event.preventDefault();
            event.stopPropagation();
            
            const likeButton = event.currentTarget;
            const likeIcon = likeButton.querySelector('.like-icon');
            const likeCount = likeButton.querySelector('.stat-value');
            
            try {
                const response = await fetch(`/api/like/${postId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const data = await response.json();

                if (data.success) {
                    // 좋아요 수 업데이트
                    likeCount.textContent = data.likes;
                    
                    // 아이콘 상태 토글
                    if (data.isLiked) {
                        likeIcon.classList.add('active');
                    } else {
                        likeIcon.classList.remove('active');
                    }
                }
            } catch (error) {
                console.error('Like error:', error);
                alert('좋아요 처리 중 오류가 발생했습니다.');
            }
        }

        // 정렬 기능
        const sortInfo = document.querySelector('.sort-info');
        const label = sortInfo.querySelector('.label');
        const grid = document.querySelector('.grid');
        let isLikesSort = false;

        sortInfo.addEventListener('click', function() {
            isLikesSort = !isLikesSort;
            
            // 텍스트와 아이콘 상태 변경
            label.textContent = isLikesSort ? '좋아요순' : '최신순';
            sortInfo.classList.toggle('likes', isLikesSort);

            // 카드 정렬
            const cards = Array.from(grid.children);
            cards.sort((a, b) => {
                if (isLikesSort) {
                    // 좋아요순 정렬
                    const likesA = parseInt(a.querySelector('.stat-value').textContent) || 0;
                    const likesB = parseInt(b.querySelector('.stat-value').textContent) || 0;
                    return likesB - likesA;
                } else {
                    // 최신순 정렬 (원래 순서로 복원)
                    const dateA = new Date(a.querySelector('.card-date').textContent);
                    const dateB = new Date(b.querySelector('.card-date').textContent);
                    return dateB - dateA;
                }
            });

            // 정렬된 카드 다시 삽입
            cards.forEach(card => grid.appendChild(card));
        });
    </script>
</body>
</html>